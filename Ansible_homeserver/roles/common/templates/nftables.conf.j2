flush ruleset

table inet server_table_generic {
	set LANv4 {
		type ipv4_addr
		flags interval

		elements = { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16 }
	}
	set LANv6 {
		type ipv6_addr
		flags interval

		elements = { fd00::/8, fe80::/10 }
	}

	chain my_input_lan {
		#meta l4proto { tcp, udp } th dport 2049 accept comment "Accept NFS"

		#udp dport netbios-ns accept comment "Accept NetBIOS Name Service (nmbd)"
		#udp dport netbios-dgm accept comment "Accept NetBIOS Datagram Service (nmbd)"
		#tcp dport netbios-ssn accept comment "Accept NetBIOS Session Service (smbd)"
		#tcp dport microsoft-ds accept comment "Accept Microsoft Directory Service (smbd)"

		tcp dport {  {{nextcloud_http_port}}, {{hugo_http_port}} } accept comment "Accept HTTP (ports {{nextcloud_http_port}}, {{hugo_http_port}})"


		tcp dport {{ansible_port}} accept comment "Accept SSH on port {{ansible_port}}"
		#tcp dport 514 accept comment "Accept rsyslog on port 514"
		tcp dport 112 accept comment "Accept VRRP on port 112"

		#udp sport { bootpc, 4011 } udp dport { bootps, 4011 } accept comment "Accept PXE"
		#udp dport tftp accept comment "Accept TFTP"
	}

	chain my_input {
		type filter hook input priority filter; policy drop;

		iif lo accept comment "Accept any localhost traffic"
		ct state invalid drop comment "Drop invalid connections"
		ct state established,related accept comment "Accept traffic originated from us"

		meta l4proto ipv6-icmp accept comment "Accept ICMPv6"
		meta l4proto icmp accept comment "Accept ICMP"
		ip protocol igmp accept comment "Accept IGMP"

		udp dport mdns ip6 daddr ff02::fb accept comment "Accept mDNS"
		udp dport mdns ip daddr 224.0.0.251 accept comment "Accept mDNS"

		ip6 saddr @LANv6 jump my_input_lan comment "Connections from private IP address ranges"
		ip saddr @LANv4 jump my_input_lan comment "Connections from private IP address ranges"


		tcp dport ipp accept comment "Accept IPP/IPPS on port 631"

		tcp dport { {{https_port}}, {{http_port}} } accept comment "Accept HTTP (ports {{http_port}}, {{https_port}} )"

		#udp sport bootpc udp dport bootps ip saddr 0.0.0.0 ip daddr 255.255.255.255 accept comment "Accept DHCPDISCOVER (for DHCP-Proxy)"
	}

	#chain my_forward {
	#	type filter hook forward priority filter; policy drop;
	#	# Drop everything forwarded to us. We do not forward. That is routers job.
	#}

	chain my_output {
		type filter hook output priority filter; policy accept;
		# Accept every outbound connection
	}

}
